{"version":3,"sources":["webpack/bootstrap a4903471fd47e1a492c0","./lib/pieces/util.js","./lib/pieces/piece.js","./lib/board.js","./lib/tetris.js","./lib/pieces/square.js","./lib/game.js","./lib/pieces/preview.js","./lib/binders.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACrDgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA,qBAAqB;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;;;;;;;;;AC3DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,oEAAoE;AACpE;AACA,iEAAiE;AACjE;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;;;ACxOA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;;;;;;;;AC3B6B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC5MgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a4903471fd47e1a492c0","export const PIECE_COLOR_OFFSETS = {\n  \"I\": 6 * 32,\n  \"J\": 7 * 32,\n  \"L\": 3 * 32,\n  \"O\": 4 * 32,\n  \"S\": 5 * 32,\n  \"Z\": 2 * 32,\n  \"T\": 8 * 32,\n}\n\nexport const PIECE_BLOCK_LOCS = {\n  \"I\": [\n  [  [0,0],[0,1],[0,2],[0,3] ],\n  [  [0,2],[1,2],[2,2],[3,2] ],\n  [  [1,0],[1,1],[1,2],[1,3] ],\n  [  [0,1],[1,1],[2,1],[3,1] ]\n  ],\n  \"J\": [\n    [[0,0],[1,0], [1,1],[1,2]],\n    [[0,1],[0,2], [1,1],[2,1]],\n    [[1,0],[1,1], [1,2],[2,2]],\n    [[2,0],[0,1], [1,1],[2,1]]\n  ],\n  \"L\": [\n    [[1,0], [1,1],[1,2],[0,2]],\n    [[0,1], [1,1],[2,1],[2,2]],\n    [[2,0], [1,0],[1,1],[1,2]],\n    [[0,0], [0,1],[1,1],[2,1]]\n  ],\n  \"O\": [\n    [[0,0],[1,1],[0,1],[1,0]],\n    [[0,0],[1,1],[0,1],[1,0]],\n    [[0,0],[1,1],[0,1],[1,0]],\n    [[0,0],[1,1],[0,1],[1,0]]\n  ],\n  \"S\": [\n    [[0,1],[0,2],[1,0],[1,1]],\n    [[0,1],[1,1],[1,2],[2,2]],\n    [[1,1],[1,2],[2,0],[2,1]],\n    [[0,0],[1,0],[1,1],[2,1]]\n  ],\n  \"Z\": [\n    [[0,0],[0,1],[1,1],[1,2]],\n    [[0,2],[1,2],[1,1],[2,1]],\n    [[1,0],[1,1],[2,1],[2,2]],\n    [[0,1],[1,0],[1,1],[2,0]]\n  ],\n  \"T\": [\n    [[0,1],[1,0],[1,1], [1,2]],\n    [[0,1],[1,1],[2,1], [1,2]],\n    [[1,0],[1,1],[1,2], [2,1]],\n    [[1,0],[0,1],[1,1], [2,1]],\n  ],\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pieces/util.js\n// module id = 0\n// module chunks = 0","import { PIECE_BLOCK_LOCS, PIECE_COLOR_OFFSETS } from './util'\n\nclass Piece {\n  constructor(type, ctx, img, x = 3, rot = 48) {\n    this.type = type\n    this.ctx = ctx\n    this.img = img\n    this.x = x\n    this.y = 0\n    this.rotation = rot\n    this.blocks = PIECE_BLOCK_LOCS[type][0].map( loc => [this.y + loc[0], this.x + loc[1] ] )\n    this.colorOffset = PIECE_COLOR_OFFSETS[type]\n    this.move = this.move.bind(this)\n    this.draw = this.draw.bind(this)\n    this._blockRenderCoords = this._blockRenderCoords.bind(this)\n    this.setBlocks = this.setBlocks.bind(this)\n  }\n\n  move(dir) {\n    switch (dir) {\n      case 'left': { this.x-- }\n        break;\n      case 'up': { this.y-- }\n        break;\n      case 'right': { this.x++ }\n        break;\n      case 'down': { this.y++ }\n        break;\n    }\n    this.setBlocks();\n  }\n\n  draw() {\n    const renderCoords = this._blockRenderCoords();\n    renderCoords.forEach( block => {\n      this.ctx.drawImage(this.img, this.colorOffset , 0, 32, 32, ...block, 32, 32)\n    })\n  }\n\n\n  setBlocks(){\n    this.blocks = PIECE_BLOCK_LOCS[this.type]\n                          [Math.abs(this.rotation % 4)]\n                          .map( loc => [this.y + loc[0], this.x + loc[1] ])\n  }\n\n  _getRenderCoords(){\n    return [this.x * 32, this.y * 32]\n  }\n\n\n  _blockRenderCoords(){\n    return this.blocks.map( loc => {\n      return [loc[1] * 32, loc[0] * 32]\n    })\n  }\n\n}\n\nexport default Piece\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pieces/piece.js\n// module id = 1\n// module chunks = 0","import Square from './pieces/square'\nimport Piece from './pieces/piece'\n\nclass Board {\n  constructor(ctx, img, game) {\n    this.ctx = ctx\n    this.img = img\n    this.game = game\n    this.grid = []\n    this._generateGrid();\n    this.currentPiece = null\n  }\n\n\n  draw() {\n    this._drawGrid();\n    this.currentPiece.draw()\n    this._showPreview()\n    const allSquares = [].concat(...this.grid)\n    allSquares.forEach( square => {\n      if (square === undefined) return;\n      square.draw();\n    })\n  }\n\n  clearSquares(){\n    this._generateGrid();\n    this.currentPiece = null;\n  }\n\n  hardDrop(){\n    while (!this._hitBottomOrPiece(this.currentPiece)) {\n      this.currentPiece.move('down')\n    }\n    this._setPiece()\n    if (this._gameOver() === 'lost') {\n      this.game.lose();\n      return\n    } else if (this._gameOver() === 'won') {\n      this.game.won();\n      return\n    }\n    this.draw();\n  }\n\n\n  movePiece(dir){\n    switch (dir) {\n      case 'left': if (this._validMove(this.currentPiece, 'left')) { this.currentPiece.move('left') }\n        break;\n      case 'up': if (this._validMove(this.currentPiece, 'up'))  { this.currentPiece.move('up') }\n        break;\n      case 'right': if (this._validMove(this.currentPiece, 'right'))  { this.currentPiece.move('right')}\n        break;\n      case 'down':\n        if (this._hitBottomOrPiece(this.currentPiece)) {\n          this._setPiece()\n        } else if (this._validMove(this.currentPiece, 'down'))  {\n          this.currentPiece.move('down')\n        }\n        break;\n      }\n    if (this._gameOver() === 'lost') {\n      this.game.lose();\n      return\n    } else if (this._gameOver() === 'won') {\n      this.game.won();\n      return\n    }\n    this.draw();\n  }\n\n  rotatePiece(dir){\n    const piece = this.currentPiece\n    if (dir === 'left') {\n      piece.rotation++\n      piece.setBlocks();\n      if (this._invalidRotation()) {\n        piece.rotation--\n        piece.setBlocks();\n      }\n    } else if (dir === 'right') {\n      piece.rotation--\n      piece.setBlocks();\n      if (this._invalidRotation()) {\n        piece.rotation++\n        piece.setBlocks();\n      }\n    }\n    this.draw();\n  }\n\n  getSquare([x,y]){\n    return this.grid[x][y]\n  }\n\n  setSquare([x,y], mark){\n    this.grid[x][y] = mark\n  }\n\n  _setPiece(){\n    const { type, ctx, img } = this.currentPiece\n    this.currentPiece.blocks.forEach( blockPos => {\n      let square = new Square(type, ctx, img, blockPos)\n      this.setSquare(blockPos, square)\n    });\n    this._clearLines();\n    this.game.sendNewPiece();\n\n    this.game.swapped = false;\n\n  }\n\n  _showPreview(){\n    const { type, ctx, img, x, rotation } = this.currentPiece\n    const previewPiece = new Piece(type, ctx, img, x, rotation)\n    while (!this._hitBottomOrPiece(previewPiece)) {\n      previewPiece.move('down')\n    }\n    if (this.currentPiece.y > previewPiece.y) {\n      previewPiece.y = this.currentPiece.y\n      previewPiece.setBlocks();\n    }\n    this.ctx.globalAlpha= 0.6\n    previewPiece.draw()\n    this.ctx.globalAlpha= 1\n  }\n\n  _generateGrid(){\n    for (var i = 0; i < 20; i++) {\n      this.grid[i] = new Array(10)\n    }\n  }\n\n  _hitBottomOrPiece(piece) {\n    return piece.blocks.some( ([col,row]) => (\n      (col + 1 === 20) || (this.getSquare([col + 1, row]))\n    ))\n  }\n\n  _invalidRotation(){\n    const blocks = this.currentPiece.blocks\n    const inBounds = blocks.every( ([col, row]) => (\n      (row >= -1) && (row <= 10) && (!this.getSquare([col, row]))\n    ))\n    if (!inBounds) return true;\n    if (blocks.some( ([_,row]) => row === -1)) {\n      this.currentPiece.x++\n    } else if (blocks.some( ([_,row]) => row === 10)) {\n      this.currentPiece.x--\n    }\n    return false\n  }\n\n  _gameOver(){\n    const blocks = this.currentPiece.blocks\n    if (blocks.some( ([col, row]) => this.getSquare([col, row]))){\n      this.game.stopTimer()\n      return 'lost'\n\n    } else if (this.game.clearedLines >= 40) {\n      this.game.stopTimer()\n      return 'won'\n    }\n  }\n\n  _validMove(piece, dir){\n    switch (dir) {\n      case 'left':\n        return piece.blocks.every( ([col, row]) => (\n          (row - 1 >= 0) && (!this.getSquare([col, row - 1]))\n        ))\n        break;\n      case 'right':\n        return piece.blocks.every( ([col, row]) => (\n        row + 1 <= 9 && (!this.getSquare([col, row + 1]))\n      ))\n        break;\n      case 'down':\n        return piece.blocks.every( ([col, row]) => (\n        col + 1 <= 19\n      ))\n        break;\n    }\n  }\n\n  _clearLines(){\n    this.grid.forEach( (row, idx)  => {\n      if (this._fullRow(row)) {\n        for (let i = 0; i < idx; i++) {\n          this._shiftSquaresDown(this.grid[i])\n        }\n        this.grid.splice(idx , 1)\n        this.grid.unshift(new Array(10))\n        this.game.clearedLines++\n        this.game.updateLinesRemaining();\n      }\n    });\n  }\n\n  _shiftSquaresDown(row){\n    row.forEach( square => square.pos[0]++)\n  }\n\n  _fullRow(row) {\n    let fullRow = true\n    for (let i = 0; i < row.length; i++) {\n      if (row[i] === undefined) fullRow = false\n    }\n    return fullRow\n  }\n\n  _drawGrid(){\n    const ctx = this.ctx\n    ctx.strokeStyle = 'rgba(255,255,255,0.3)'\n    ctx.lineWidth = 0.5\n    for (var i = 1; i < 10; i++) {\n      ctx.beginPath();\n      ctx.moveTo(32 * i, 0);\n      ctx.lineTo(32 * i, 640);\n      ctx.stroke();\n    }\n    for (var j = 0; j < 20; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, 32 * j);\n      ctx.lineTo(320, 32 * j);\n      ctx.stroke();\n    }\n  }\n\n\n}\nexport default Board\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","import Board from './board'\nimport Piece from './pieces/piece'\nimport Game from './game'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n  const game = document.getElementById(\"game\");\n  const hold = document.getElementById(\"hold\");\n  const preview1 = document.getElementById(\"preview1\");\n  const preview2 = document.getElementById(\"preview2\");\n  const preview3 = document.getElementById(\"preview3\");\n  const ctx = {};\n  ctx.game = game.getContext(\"2d\");\n  ctx.hold = hold.getContext(\"2d\");\n  ctx.preview1 = preview1.getContext(\"2d\");\n  ctx.preview2 = preview2.getContext(\"2d\");\n  ctx.preview3 = preview3.getContext(\"2d\");\n  const blocks = new Image();\n  blocks.src = \"assets/images/blocks.png\"\n  blocks.onload = () => {\n    const game = new Game(ctx, blocks)\n    game.play()\n  }\n  $(\".open-controls\").on(\"click\", () => {\n    $(\".controls\").toggleClass(\"hidden\")\n  })\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tetris.js\n// module id = 3\n// module chunks = 0","import { PIECE_COLOR_OFFSETS } from './util'\n\nclass Square {\n  constructor(type, ctx, img, pos){\n    this.type = type\n    this.ctx = ctx\n    this.img = img\n    this.pos = pos\n    this.colorOffset = PIECE_COLOR_OFFSETS[type]\n  }\n\n  draw() {\n    const renderPos = [this.pos[1] * 32, this.pos[0] * 32]\n    this.ctx.drawImage(this.img, this.colorOffset , 0, 32, 32, ...renderPos, 32, 32)\n  }\n}\n\nexport default Square;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pieces/square.js\n// module id = 4\n// module chunks = 0","import Board from './board'\nimport Piece from './pieces/piece'\nimport PreviewPiece from './pieces/preview'\nimport bindKeys from './binders'\n\n\nclass Game{\n  constructor(ctx, blocks){\n    this.board = new Board(ctx.game, blocks, this)\n    this.clearedLines = 0\n    this.pieceQueue = []\n    this.ctx = ctx\n    this.blocks = blocks\n    this.heldPiece = null\n    this.swapped = false\n    this._fillPieceQueue();\n    this.updateLinesRemaining();\n  }\n\n  restart(){\n    clearInterval(this.tick)\n    this.unbindKeys()\n    this.keysBound = false\n    this.ctx.game.clearRect(0,0, 320, 640)\n    this.ctx.hold.clearRect(0,0, 320, 640)\n    this.clearedLines = 0\n    this.pieceQueue = []\n    this._fillPieceQueue();\n    this.updateLinesRemaining();\n    this.stopTimer();\n    this.heldPiece = null\n    this.board.clearSquares();\n    this.sendNewPiece();\n    document.getElementById('timer').innerHTML = '0.0s'\n    this.play()\n  }\n\n  play(){\n    this._countdownTimer();\n    this._drawPreview();\n    setTimeout( () => {\n      this.ctx.game.clearRect(0, 200, 640, 300)\n      if (!this.keysBound) {\n        if (this.unbindKeys) { this.unbindKeys() }\n        this.unbindKeys = bindKeys(this);\n        this.keysBound = true\n      }\n      this.stopTimer = this._drawTimer();\n      this.sendNewPiece();\n      this.board.draw();\n      this.tick = setInterval( ()=> {\n        this.move('down')\n      }, 1500)\n    }, 4000)\n  }\n\n  lose(){\n    clearInterval(this.tick)\n    alert('you lose')\n  }\n\n  won(){\n    clearInterval(this.tick)\n    alert('you win')\n  }\n\n  move(dir){\n    this.ctx.game.clearRect(0,0, 320, 640)\n    this.board.movePiece(dir)\n  }\n\n  rotate(dir){\n    this.ctx.game.clearRect(0,0, 320, 640)\n    this.board.rotatePiece(dir)\n  }\n\n  hardDrop(){\n    this.ctx.game.clearRect(0,0, 320, 640)\n    this.board.hardDrop()\n  }\n\n  holdPiece(){\n    if (!this.swapped) {\n      if (this.heldPiece) {\n        const piece = this.heldPiece\n        this.heldPiece = this.currentPiece\n        this.currentPiece = piece\n        this._resetPositions();\n        this.board.currentPiece = this.currentPiece\n      } else {\n        this.heldPiece = this.currentPiece\n        this.sendNewPiece();\n      }\n      this.ctx.game.clearRect(0,0, 320, 640)\n      this.board.draw();\n      this._drawHeldPiece();\n      this.swapped = true;\n    }\n  }\n\n  sendNewPiece(arg){\n    this.currentPiece = this.pieceQueue.shift()\n    this.board.currentPiece = this.currentPiece\n    if (this.pieceQueue.length < 3) {\n      this._fillPieceQueue();\n    }\n    this._drawPreview();\n  }\n\n  _drawPreview(){\n    const ctx1 = this.ctx.preview1\n    ctx1.clearRect(0,0,128,128)\n    const first = new PreviewPiece(ctx1, this.pieceQueue[0])\n    const ctx2 = this.ctx.preview2\n    ctx2.clearRect(0,0,128,128)\n    const second = new PreviewPiece(ctx2, this.pieceQueue[1])\n    const ctx3 = this.ctx.preview3\n    ctx3.clearRect(0,0,128,128)\n    const third = new PreviewPiece(ctx3, this.pieceQueue[2])\n    first.draw();\n    second.draw();\n    third.draw();\n  }\n\n  _countdownTimer(i = 3){\n    if (i === 0) {\n      setTimeout( () => {\n        this.ctx.game.fillStyle = \"black\"\n        this.ctx.game.fillRect(0, 200, 640, 100)\n        this.ctx.game.fillStyle = \"yellow\"\n        this.ctx.game.font = \"60px Sarpanch\"\n        this.ctx.game.fillText('Start!', 75,270)\n      }, 1000)\n      return\n    } else if (i === 3) {\n      this._drawCountdown(i)\n      i--\n      this._countdownTimer(i)\n    } else {\n      setTimeout( () => {\n        this._drawCountdown(i)\n        i--\n        this._countdownTimer(i)\n      }, 1000)\n    }\n  }\n\n  _drawCountdown(i){\n    this.ctx.game.fillStyle = \"black\"\n    this.ctx.game.fillRect(0, 200, 640, 100)\n    this.ctx.game.fillStyle = \"yellow\"\n    this.ctx.game.font = \"60px Sarpanch\"\n    this.ctx.game.fillText(i, 135,270)\n  }\n\n  _resetPositions(){\n    this.heldPiece.y = 0\n    this.currentPiece.y = 0\n    this.heldPiece.x = 3\n    this.currentPiece.x = 3\n    this.currentPiece.rotation = 48\n    this.currentPiece.setBlocks();\n  }\n  _drawHeldPiece(){\n    const ctx = this.ctx.hold\n    ctx.clearRect(0,0,128,128)\n    const held = new PreviewPiece(ctx, this.heldPiece)\n    held.draw();\n  }\n\n  updateLinesRemaining(){\n    document.getElementById('lines-remaining')\n                      .innerHTML = Math.max(0, 40 - this.clearedLines)\n  }\n\n  _drawTimer(){\n    const start = new Date().getTime()\n    let elapsed = '0.0'\n    const timer = setInterval( () => {\n      let time = new Date().getTime() - start\n      elapsed = Math.floor(time / 100) / 10\n      if (Math.round(elapsed) == elapsed) {\n        elapsed += '.0'\n      }\n      this.time = elapsed\n      document.getElementById('timer').innerHTML = elapsed + 's'\n    })\n    return () => { clearInterval(timer) }\n  }\n\n  _fillPieceQueue(){\n    let pieces = ['I', 'J', 'L', 'O', 'S', 'Z', 'T']\n    for (var i = 0; i < pieces.length - 1; i++) {\n      let randIdx = Math.floor(Math.random() * (pieces.length -1))\n      let temp = pieces[randIdx]\n      pieces[randIdx] = pieces[i]\n      pieces[i] = temp\n    }\n    const { ctx, blocks } = this\n    pieces = pieces.map( type => new Piece(type, ctx.game, blocks))\n    this.pieceQueue = this.pieceQueue.concat(pieces)\n  }\n}\n\nexport default Game\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 5\n// module chunks = 0","import { PIECE_BLOCK_LOCS, PIECE_COLOR_OFFSETS } from './util'\n\nclass PreviewPiece {\n  constructor(ctx, piece){\n    this.ctx = ctx\n    this.blocks = PIECE_BLOCK_LOCS[piece.type][0]\n    this.img = piece.img\n    this.colorOffset = piece.colorOffset\n  }\n\n  draw() {\n    const renderCoords = this._blockRenderCoords();\n    renderCoords.forEach( block => {\n      this.ctx.drawImage(this.img, this.colorOffset , 0, 32, 32, ...block, 32, 32)\n    })\n  }\n\n  _blockRenderCoords(){\n    return this.blocks.map( loc => {\n      return [loc[1] * 32, loc[0] * 32]\n    })\n  }\n}\n\nexport default PreviewPiece\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pieces/preview.js\n// module id = 6\n// module chunks = 0","const bindKeys = (game) => {\n  let down = false\n  const configs = {\n    \"2\" : (e) => {\n      switch (e.keyCode) {\n        case 37:\n          game.move('left')\n          break;\n        case 32:\n          game.hardDrop()\n          break;\n        case 39:\n          game.move('right')\n          break;\n        case 40:\n          game.move('down')\n          break;\n        case 90:\n          if (down) return\n          down = true\n          game.rotate('left')\n          break;\n        case 88:\n          if (down) return\n          down = true\n          game.rotate('right')\n          break;\n        case 67:\n          game.holdPiece();\n          break;\n        case 82:\n          game.restart();\n          break;\n      }\n    },\n    \"1\": (e) => {\n      switch (e.keyCode) {\n        case 65:\n          game.move('left')\n          break;\n        case 87:\n          game.hardDrop()\n          break;\n        case 68:\n          game.move('right')\n          break;\n        case 83:\n          game.move('down')\n          break;\n        case 39:\n          if (down) return\n          down = true\n          game.rotate('left')\n          break;\n        case 37:\n          if (down) return\n          down = true\n          game.rotate('right')\n          break;\n        case 16:\n          game.holdPiece();\n          break;\n        case 82:\n          game.restart();\n          break;\n      }\n    }\n  }\n\n  document.removeEventListener(\"keydown\", configs[\"1\"])\n  document.removeEventListener(\"keydown\", configs[\"2\"])\n  let currentConfig = configs[$(\"input[name='config']:checked\").val()]\n  document.addEventListener(\"keydown\", currentConfig)\n  $(\".close-controls\").off(\"click\")\n  $(\".close-controls\").on(\"click\", () => {\n    document.removeEventListener(\"keydown\", currentConfig)\n    currentConfig = configs[$(\"input[name='config']:checked\").val()]\n    document.addEventListener(\"keydown\", currentConfig)\n    $(\".controls\").addClass(\"hidden\")\n  })\n  document.addEventListener('keyup', function () {\n    down = false;\n  }, false);\n  return () => {\n    document.removeEventListener(\"keydown\", configs[\"1\"])\n    document.removeEventListener(\"keydown\", configs[\"2\"])\n  }\n}\n\n\nexport default bindKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/binders.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}